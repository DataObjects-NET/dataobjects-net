//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xtensive.TransactionLog.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Xtensive.TransactionLog.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counter has no value..
        /// </summary>
        internal static string ExCounterHasNoValue {
            get {
                return ResourceManager.GetString("ExCounterHasNoValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current counter value is greater or equal to the new one..
        /// </summary>
        internal static string ExInvalidCounterSequence {
            get {
                return ResourceManager.GetString("ExInvalidCounterSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid key sequence or transaction is already committed..
        /// </summary>
        internal static string ExInvalidKeySequance {
            get {
                return ResourceManager.GetString("ExInvalidKeySequance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record is already appended to the log..
        /// </summary>
        internal static string ExRecordIsAlreadyAppended {
            get {
                return ResourceManager.GetString("ExRecordIsAlreadyAppended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record {0} state is invalid.
        /// </summary>
        internal static string ExRecordXxxStateIsInvalid {
            get {
                return ResourceManager.GetString("ExRecordXxxStateIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to start the transaction because it already started..
        /// </summary>
        internal static string ExTransactionIsAlreadyStarted {
            get {
                return ResourceManager.GetString("ExTransactionIsAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction is not active. It may be missing or is already committed..
        /// </summary>
        internal static string ExTransactionIsNotActive {
            get {
                return ResourceManager.GetString("ExTransactionIsNotActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction is not found in the log..
        /// </summary>
        internal static string ExTransactionNotFound {
            get {
                return ResourceManager.GetString("ExTransactionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction state &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string ExUnsupportedTransactionState {
            get {
                return ResourceManager.GetString("ExUnsupportedTransactionState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to dispose slot {0}..
        /// </summary>
        internal static string LogUnableToDisposeSlotXxx {
            get {
                return ResourceManager.GetString("LogUnableToDisposeSlotXxx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to restore data from {0} slot..
        /// </summary>
        internal static string LogUnableToRestoreDataFromXxxSlot {
            get {
                return ResourceManager.GetString("LogUnableToRestoreDataFromXxxSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to restore file {0}.
        /// </summary>
        internal static string LogUnableToRestoreFileXxx {
            get {
                return ResourceManager.GetString("LogUnableToRestoreFileXxx", resourceCulture);
            }
        }
    }
}
