//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xtensive.Modelling.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Xtensive.Modelling.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual target model.
        /// </summary>
        internal static string ActualTargetModel {
            get {
                return ResourceManager.GetString("ActualTargetModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Difference.
        /// </summary>
        internal static string Difference {
            get {
                return ResourceManager.GetString("Difference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{1}&quot; != &quot;{2}&quot; ({0}): {3}.
        /// </summary>
        internal static string DifferenceFormat {
            get {
                return ResourceManager.GetString("DifferenceFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to +{0}: .
        /// </summary>
        internal static string DifferencePropertyNamePrefix {
            get {
                return ResourceManager.GetString("DifferencePropertyNamePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binding has failed for {0}. Check property declaration..
        /// </summary>
        internal static string ExBindingFailedForX {
            get {
                return ResourceManager.GetString("ExBindingFailedForX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both Source and Target are null..
        /// </summary>
        internal static string ExBothSourceAndTargetAreNull {
            get {
                return ResourceManager.GetString("ExBothSourceAndTargetAreNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t find a constructor to execute {0}..
        /// </summary>
        internal static string ExCannotFindConstructorToExecuteX {
            get {
                return ResourceManager.GetString("ExCannotFindConstructorToExecuteX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Difference related to {0} type is not found on the UpgradeContext stack..
        /// </summary>
        internal static string ExDifferenceRelatedToXTypeIsNotFoundOnTheUpgradeContextStack {
            get {
                return ResourceManager.GetString("ExDifferenceRelatedToXTypeIsNotFoundOnTheUpgradeContextStack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid AfterPath property value..
        /// </summary>
        internal static string ExInvalidAfterPathPropertyValue {
            get {
                return ResourceManager.GetString("ExInvalidAfterPathPropertyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid context activation sequence..
        /// </summary>
        internal static string ExInvalidContextActivationSequence {
            get {
                return ResourceManager.GetString("ExInvalidContextActivationSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid context deactivation sequence..
        /// </summary>
        internal static string ExInvalidContextDeactivationSequence {
            get {
                return ResourceManager.GetString("ExInvalidContextDeactivationSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Nesting of node &quot;{0}&quot;..
        /// </summary>
        internal static string ExInvalidNestingOfNodeX {
            get {
                return ResourceManager.GetString("ExInvalidNestingOfNodeX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid node state..
        /// </summary>
        internal static string ExInvalidNodeState {
            get {
                return ResourceManager.GetString("ExInvalidNodeState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Parent value..
        /// </summary>
        internal static string ExInvalidParentValue {
            get {
                return ResourceManager.GetString("ExInvalidParentValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item already exists..
        /// </summary>
        internal static string ExItemAlreadyExists {
            get {
                return ResourceManager.GetString("ExItemAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item with name &apos;{0}&apos; already exists..
        /// </summary>
        internal static string ExItemWithNameXAlreadyExists {
            get {
                return ResourceManager.GetString("ExItemWithNameXAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item with Name &apos;{0}&apos; is not found..
        /// </summary>
        internal static string ExItemWithNameXIsNotFound {
            get {
                return ResourceManager.GetString("ExItemWithNameXIsNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loop in action dependency chain is detected..
        /// </summary>
        internal static string ExLoopInActionDependencyChain {
            get {
                return ResourceManager.GetString("ExLoopInActionDependencyChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model object cannot be removed..
        /// </summary>
        internal static string ExModelObjectCannotBeRemoved {
            get {
                return ResourceManager.GetString("ExModelObjectCannotBeRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple hints found..
        /// </summary>
        internal static string ExMultipleHintsFound {
            get {
                return ResourceManager.GetString("ExMultipleHintsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparer.Current is null..
        /// </summary>
        internal static string ExNoCurrentComparer {
            get {
                return ResourceManager.GetString("ExNoCurrentComparer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgarder.Current is null..
        /// </summary>
        internal static string ExNoCurrentUpgrader {
            get {
                return ResourceManager.GetString("ExNoCurrentUpgrader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node &quot;{0}&quot; must be processed before being compared as reference (value of &quot;{1}&quot;.{2})..
        /// </summary>
        internal static string ExNodeXMustBeProcessedBeforeBeingComparedAsReferenceValueOfYZ {
            get {
                return ResourceManager.GetString("ExNodeXMustBeProcessedBeforeBeingComparedAsReferenceValueOfYZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nesting must be created for any node..
        /// </summary>
        internal static string ExNoNesting {
            get {
                return ResourceManager.GetString("ExNoNesting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node with path &quot;{0}&quot; is not found..
        /// </summary>
        internal static string ExPathXNotFound {
            get {
                return ResourceManager.GetString("ExPathXNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected target model.
        /// </summary>
        internal static string ExpectedTargetModel {
            get {
                return ResourceManager.GetString("ExpectedTargetModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property value must belong to the same Model..
        /// </summary>
        internal static string ExPropertyValueMustBelongToTheSameModel {
            get {
                return ResourceManager.GetString("ExPropertyValueMustBelongToTheSameModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property &quot;{0}.{1}&quot; is not found..
        /// </summary>
        internal static string ExPropertyXYIsNotFound {
            get {
                return ResourceManager.GetString("ExPropertyXYIsNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target object already exists: &quot;{0}&quot;. To assign a new one, you must remove the old one first..
        /// </summary>
        internal static string ExTargetObjectExistsX {
            get {
                return ResourceManager.GetString("ExTargetObjectExistsX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of {0} property must be {1}..
        /// </summary>
        internal static string ExTypeOfXPropertyMustBeY {
            get {
                return ResourceManager.GetString("ExTypeOfXPropertyMustBeY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade sequence validation failure..
        /// </summary>
        internal static string ExUpgradeSequenceValidationFailure {
            get {
                return ResourceManager.GetString("ExUpgradeSequenceValidationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} change(s).
        /// </summary>
        internal static string ItemChangeCountFormat {
            get {
                return ResourceManager.GetString("ItemChangeCountFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        internal static string ItemChangeFormat {
            get {
                return ResourceManager.GetString("ItemChangeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic upgrade sequence validation.
        /// </summary>
        internal static string LogAutomaticUpgradeSequenceValidation {
            get {
                return ResourceManager.GetString("LogAutomaticUpgradeSequenceValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}:.
        /// </summary>
        internal static string LogItemFormat {
            get {
                return ResourceManager.GetString("LogItemFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation failed..
        /// </summary>
        internal static string LogValidationFailed {
            get {
                return ResourceManager.GetString("LogValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}).
        /// </summary>
        internal static string NodeInfoFormat {
            get {
                return ResourceManager.GetString("NodeInfoFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to +{0}: {1}.
        /// </summary>
        internal static string PropertyChangeFormat {
            get {
                return ResourceManager.GetString("PropertyChangeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade sequence.
        /// </summary>
        internal static string UpgradeSequence {
            get {
                return ResourceManager.GetString("UpgradeSequence", resourceCulture);
            }
        }
    }
}
