//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1378
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xtensive.Messaging.Providers.Tcp.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Xtensive.Messaging.Providers.Tcp.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No IP addresses found by host name. .
        /// </summary>
        internal static string ExIncorrectListeningAddress {
            get {
                return ResourceManager.GetString("ExIncorrectListeningAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method or property can&apos;t be used in TcpListeningConnection implementation of IListeningConnection..
        /// </summary>
        internal static string ExListeningConnectionInvalidMethodOrProperty {
            get {
                return ResourceManager.GetString("ExListeningConnectionInvalidMethodOrProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message buffer can&apos;t be zero length..
        /// </summary>
        internal static string ExMessageIsEmpty {
            get {
                return ResourceManager.GetString("ExMessageIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are many IP addresses found for hostname. Listener can listen on either single IP address or all available addresses (provide $ANY as host name)..
        /// </summary>
        internal static string ExMultipleIpAddresses {
            get {
                return ResourceManager.GetString("ExMultipleIpAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port value is out of range. It should be in [0,65535] interval..
        /// </summary>
        internal static string ExPortOutOfRange {
            get {
                return ResourceManager.GetString("ExPortOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset or length outside of message buffer&apos;s bounds..
        /// </summary>
        internal static string ExSendBoundsIncorrect {
            get {
                return ResourceManager.GetString("ExSendBoundsIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Socket closed..
        /// </summary>
        internal static string ExSocketClosed {
            get {
                return ResourceManager.GetString("ExSocketClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while try to start reading from socket. Please look at inner exception for details..
        /// </summary>
        internal static string ExSocketReaderNotExecuted {
            get {
                return ResourceManager.GetString("ExSocketReaderNotExecuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while send data to socket. Please see inner exception for details..
        /// </summary>
        internal static string ExSocketSendError {
            get {
                return ResourceManager.GetString("ExSocketSendError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &quot;Conume&quot; before send..
        /// </summary>
        internal static string ExUseConsumeBeforeSend {
            get {
                return ResourceManager.GetString("ExUseConsumeBeforeSend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid protocol for this provider..
        /// </summary>
        internal static string ExWrongProtocol {
            get {
                return ResourceManager.GetString("ExWrongProtocol", resourceCulture);
            }
        }
    }
}
