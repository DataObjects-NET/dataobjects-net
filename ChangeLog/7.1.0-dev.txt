[main] ThreadSafeCache is removed
[main] INamedValueCollection and its the only implementer NamedValueCollection are removed
[main] ICollectionChangeNotifier, CollectionChangeNotifierEventArgs are removed
[main] ArrayUtils class is removed
[main] ISet<T> interface is removed and all usages are replaced with .Net ISet<T>
[main] Set<T>, SetSlim<T>, ReadOnlySet<T> collections and abstract SetBase are removed
[main] ReadOnlyList<T> is removed
[main] ReadOnlyCollection<T>
[main] ReadOnlyDictionary<TKey, TValue> is removed
[main] ThreadSafeDictionary is removed
[main] ThreadSafeList struct is removed
[main] TypeClassifier collection is removed
[main] LazyDictionary is removed
[main] FlagRegistry is removed
[main] EnumerableUtils<T> is removed
[main] DifferentialDictionary and DifferentialDictionaryDifference are removed
[main] CollectionBase<T> is removed
[main] StringExtensions.Join() methods are removed
[main] CollectionExtensions.ReverseList() method is removed
[main] ThreadSafeCached type is removed
[main] Triplet<T> and Triplet<TFirst,TSecond,TThird> are removed
[main] Introduced IQueryable<T>.Tag() extensions allowing to add tags to result SQL statement
[main] ReadOnlyHashSet<T> now implements .Net ISet and IReadOnlySet instead of removed ISet and IReadOnly
[main] NativeTypeClassifier collection now inherits ClassifiedCollection directly
[main] FlagCollection.Keys return type has changed from removed ReadOnlyList<T> to .Net IReadOnlyList<T>
[main] CollectionBaseSlim<T> no longer implements IList<T> and ICollection but implements ICollection<T> and IReadOnlyList<T>
[main] AggregateException.Exceptions property changed its return type to IReadOnlyList<Exception>
[main] AggregateException constuctors get array of exceptions instead of IEnumerable<Exception>
[main] CopyDataHint.CopiedColumns property changed its return type to IReadOnlyList<Pair<string>>
[main] DateHint.Identitites property changed its return type to IReadOnlyList<IdentityPair>
[main] UpdateDataHint.UpdateParameter property changed its return type to IReadOnlyList<Pair<string, object>>
[main] IUpgrader methods now return IReadOnlyList<NodeAction>
[main] PropertyAccessorDictionary has changed API due to change its base type and interfaces
[main] FullTextIndexDefCollection changed its base type to CollectionBaseSlim<FullTextIndexDef>
[main] HierarchyDefCollection changed its base type to CollectionBaseSlim<HierarchyDef>
[main] HierarchyDefCollection and TypeDefCollection changed events set due to change of base type
[main] SessionConfiguration collection API changed due to changes in base type CollectionBaseSlim<T>
[main] IGenerationTerm.Terms changed its return type to IReadOnlyList<string>
[main] IProximityTerm.Terms changed its return type to IReadOnlyList<IProximityOperand>
[main] IOperation properties (PrecedingOperations, FollowingOperations, UndoOperations, IdentifiedEntities) changed return type
[main] HierarchyInfo.Types changed its return type to IReadOnlyList<TypeInfo>
[main] IndexInfo.Columns changed its return type to IReadOnlyList<ColumnInfo>
[main] KeyInfo's Fields and Columns properties changed to ReadOnlyList<FieldInfo> and IReadOnlyList<ColumnInfo> respectively
[main] TypeIndexInfoCollection.RealPrimaryIndexes property changed its return type to IReadOnlyList<IndexInfo>
[main] TypeIndexInfoCollection.GetIndexesContainingAllData() method changed its return type to IReadOnlyList<IndexInfo>
[main] TypeInfo members that returned IList<T> changed return type to IReadOnlyList<TypeInfo>
[main] PersistRequestBuilderContext.AffectedIndexes changed return type to IReadOnlyList<IndexInfo>
[main] QueryRowFilterParameterBinding.RowTypeMapping changed return type to IReadOnlyList<TypeMapping>
[main] ProviderInfo.SupportedTypes changed return type to IReadOnlySet<Type>
[main] SessionHandler.Prefetch/PrefetchAsync changed type of one of incoming parameters from IList<T> to IReadOnlyList<T>
[main] ContainsTableProvider.TargetColumns changed return type to IReadOnlyList<FullTextColumnInfo>
[main] ColumnCollection is no longer inherited from ReadOnlyList<Column> but implements IReadOnlyList<Column>
[main] ColumnGroupCollection is no longer inherited from ReadOnlyCollection<Column> but implements IReadOnlyList<ColumnGroup>
[main] ChangeFieldTypeHint.AffectedColumns changed return type to IReadOnlyList<string>
[main] RemoveFieldHint.AffectedColumns changed return type to IReadOnlyList<string>
[main] RemoveTypeHint.AffectedTables changed return type to IReadOnlyList<string>
[main] SchemaComparisonResult.UnsafeActions changed return type to IReadOnlyList<NodeAction>
[main] UpgradeContext.Hints changed return type to ISet<UpgradeHint>
[main] UpgradeContext.Modules changed return type to IReadOnlyList<IModule>
[main] UpgradeContext.OrderedUpgradeHandlers changed return type to IReadOnlyList<IUpgradeHandler>
[main] UpgradeContext.UpgradeHandlers changed return type to IReadOnlyDictionary<Assembly, IUpgradeHandler>
[main] UpgradeHandler.AddUpgradeHints() and .AddAutoHints() now take ISet<T> from .Net instead of ORM's ISet<T>
[main] KeyMapping.Map changed type to IReadOnlyDictionary<Key, Key>
[main] InterfaceMapping's properties of ReadOnlyList<T> type changed the type to IReadOnlyList<T>
[main] Node's IncomingConnections and OutgoingConnections properties changed types to IReadOnlyList<NodeConnection<TNodeItem, TConnectionItem>>
[main] SqlCompilerConfiguration's SchemaMapping and DatabaseMapping changed return types to IReadOnlyDictionary<string, string>
[main] TypeMappingRegistry.Mappings and .ReverseMappings changed return types to IReadOnlyDictionary<TKey, TValue>