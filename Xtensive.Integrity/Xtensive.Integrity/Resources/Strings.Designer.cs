//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xtensive.Integrity.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Xtensive.Integrity.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying [{0}] to property &apos;{1}&apos; failed. {2}.
        /// </summary>
        internal static string AspectExApplyingXToPropertyYFailedZ {
            get {
                return ResourceManager.GetString("AspectExApplyingXToPropertyYFailedZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both localizable message resource and not localizable message can not be specified at once (location: {0})..
        /// </summary>
        internal static string AspectExBothLocalizableMessageResourceAndNotLocalizableMessageCanNotBeSpecifiedAtOnceLocationX {
            get {
                return ResourceManager.GetString("AspectExBothLocalizableMessageResourceAndNotLocalizableMessageCanNotBeSpecifiedAt" +
                        "OnceLocationX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field constraint can not be applied to read only property {0}..
        /// </summary>
        internal static string AspectExFieldConstraintCanNotBeAppliedToReadOnlyPropertyX {
            get {
                return ResourceManager.GetString("AspectExFieldConstraintCanNotBeAppliedToReadOnlyPropertyX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] attribute on &apos;{1}&apos; requires a comparer for type &apos;{2}&apos;..
        /// </summary>
        internal static string AspectExNoComparer {
            get {
                return ResourceManager.GetString("AspectExNoComparer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; and &apos;{1}&apos; properties must be used together (location: {2})..
        /// </summary>
        internal static string AspectExXAndYPropertiesMustBeUsedTogetherLocationZ {
            get {
                return ResourceManager.GetString("AspectExXAndYPropertiesMustBeUsedTogetherLocationZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not support &apos;{1}&apos; value type (location: {2})..
        /// </summary>
        internal static string AspectExXDoesNotSupportYValueTypeLocationZ {
            get {
                return ResourceManager.GetString("AspectExXDoesNotSupportYValueTypeLocationZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} can not be empty..
        /// </summary>
        internal static string ConstraintMessageValueCanNotBeEmpty {
            get {
                return ResourceManager.GetString("ConstraintMessageValueCanNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} can not be greater than {Max}..
        /// </summary>
        internal static string ConstraintMessageValueCanNotBeGreaterThanMax {
            get {
                return ResourceManager.GetString("ConstraintMessageValueCanNotBeGreaterThanMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} can not be less than {Min}..
        /// </summary>
        internal static string ConstraintMessageValueCanNotBeLessThanMin {
            get {
                return ResourceManager.GetString("ConstraintMessageValueCanNotBeLessThanMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} can not be less than {Min} or greater than {Max}..
        /// </summary>
        internal static string ConstraintMessageValueCanNotBeLessThanMinOrGreaterThanMax {
            get {
                return ResourceManager.GetString("ConstraintMessageValueCanNotBeLessThanMinOrGreaterThanMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} can not be null..
        /// </summary>
        internal static string ConstraintMessageValueCanNotBeNull {
            get {
                return ResourceManager.GetString("ConstraintMessageValueCanNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} can not be null or empty..
        /// </summary>
        internal static string ConstraintMessageValueCanNotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ConstraintMessageValueCanNotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} format is incorrect..
        /// </summary>
        internal static string ConstraintMessageValueFormatIsIncorrect {
            get {
                return ResourceManager.GetString("ConstraintMessageValueFormatIsIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} length can not be greater than {Max}..
        /// </summary>
        internal static string ConstraintMessageValueLengthCanNotBeGreaterThanMax {
            get {
                return ResourceManager.GetString("ConstraintMessageValueLengthCanNotBeGreaterThanMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} length can not be less than {Min}..
        /// </summary>
        internal static string ConstraintMessageValueLengthCanNotBeLessThanMin {
            get {
                return ResourceManager.GetString("ConstraintMessageValueLengthCanNotBeLessThanMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} length can not be less than {Min} and greater then {Max}..
        /// </summary>
        internal static string ConstraintMessageValueLengthCanNotBeLessThanMinAndGreaterThenMax {
            get {
                return ResourceManager.GetString("ConstraintMessageValueLengthCanNotBeLessThanMinAndGreaterThenMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be in the future..
        /// </summary>
        internal static string ConstraintMessageValueMustBeInTheFuture {
            get {
                return ResourceManager.GetString("ConstraintMessageValueMustBeInTheFuture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be in the past..
        /// </summary>
        internal static string ConstraintMessageValueMustBeInThePast {
            get {
                return ResourceManager.GetString("ConstraintMessageValueMustBeInThePast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date must be in the past..
        /// </summary>
        internal static string DateMustBeInThePast {
            get {
                return ResourceManager.GetString("DateMustBeInThePast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UndoDescriptor is already completed..
        /// </summary>
        internal static string ExAlreadyCompleted {
            get {
                return ResourceManager.GetString("ExAlreadyCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AtomicContext is suspended..
        /// </summary>
        internal static string ExAtomicContextIsSuspended {
            get {
                return ResourceManager.GetString("ExAtomicContextIsSuspended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocking descriptor can&apos;t be invoked..
        /// </summary>
        internal static string ExCantInvokeBlockingDescriptor {
            get {
                return ResourceManager.GetString("ExCantInvokeBlockingDescriptor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparer for type &apos;{0}&apos; is not found..
        /// </summary>
        internal static string ExComparerForTypeXIsNotFound {
            get {
                return ResourceManager.GetString("ExComparerForTypeXIsNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complete method must be called just once..
        /// </summary>
        internal static string ExCompleteMustBeCalledJustOnce {
            get {
                return ResourceManager.GetString("ExCompleteMustBeCalledJustOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Concurrency conflict..
        /// </summary>
        internal static string ExConcurrencyConflict {
            get {
                return ResourceManager.GetString("ExConcurrencyConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Context is not activated..
        /// </summary>
        internal static string ExContextMustBeActivated {
            get {
                return ResourceManager.GetString("ExContextMustBeActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deadlock was found..
        /// </summary>
        internal static string ExDeadlock {
            get {
                return ResourceManager.GetString("ExDeadlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regular expression pattern is not specified..
        /// </summary>
        internal static string ExExpressionPatternIsNotSpecified {
            get {
                return ResourceManager.GetString("ExExpressionPatternIsNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect Stage value: &apos;{0}&apos;..
        /// </summary>
        internal static string ExIncorrectStageValue {
            get {
                return ResourceManager.GetString("ExIncorrectStageValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid transaction state (&apos;{0}&apos;). Expected state(s) is (are) &apos;{1}&apos;..
        /// </summary>
        internal static string ExInvalidTransactionState {
            get {
                return ResourceManager.GetString("ExInvalidTransactionState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Max&apos; or &apos;Min&apos; property must be specified..
        /// </summary>
        internal static string ExMaxOrMinPropertyMustBeSpecified {
            get {
                return ResourceManager.GetString("ExMaxOrMinPropertyMustBeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified object and the context are incompatible..
        /// </summary>
        internal static string ExObjectAndContextAreIncompatible {
            get {
                return ResourceManager.GetString("ExObjectAndContextAreIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can&apos;t Activate new operation, since old ActiveOperation is still running..
        /// </summary>
        internal static string ExOldActiveOperationIsStillRunning {
            get {
                return ResourceManager.GetString("ExOldActiveOperationIsStillRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scope-bound transaction can be committed only by its scope. Use TransactionScopeBase.Complete() \  Dispose() methods of  appropriate TransactionScopeBase descendant instance to do this..
        /// </summary>
        internal static string ExScopeBoundTransactionCanBeCommittedOnlyByItsScope {
            get {
                return ResourceManager.GetString("ExScopeBoundTransactionCanBeCommittedOnlyByItsScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified RedoDescriptor can&apos;t be logged..
        /// </summary>
        internal static string ExSpecifiedRedoDescriptorCantBeLogged {
            get {
                return ResourceManager.GetString("ExSpecifiedRedoDescriptorCantBeLogged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction is already activated..
        /// </summary>
        internal static string ExTransactionIsAlreadyActivated {
            get {
                return ResourceManager.GetString("ExTransactionIsAlreadyActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TransactionScope.IsCompleted can not be set to &apos;false&apos;..
        /// </summary>
        internal static string ExTransactionScopeIsCompletedCanNotBeSetToFalse {
            get {
                return ResourceManager.GetString("ExTransactionScopeIsCompletedCanNotBeSetToFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation context is in invalid state. This means that some validation error has happened, but later it was suppressed..
        /// </summary>
        internal static string ExValidationContextIsInvalid {
            get {
                return ResourceManager.GetString("ExValidationContextIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation failed..
        /// </summary>
        internal static string ExValidationFailed {
            get {
                return ResourceManager.GetString("ExValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version conflict..
        /// </summary>
        internal static string ExVersionConflict {
            get {
                return ResourceManager.GetString("ExVersionConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version conflict on object {0}: expected: {1} = {2}, but it is {3}..
        /// </summary>
        internal static string ExVersionConflictEx {
            get {
                return ResourceManager.GetString("ExVersionConflictEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during undoing the relation synchronization..
        /// </summary>
        internal static string LogRelationSyncUndoError {
            get {
                return ResourceManager.GetString("LogRelationSyncUndoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during Undo execution: descriptor {0}..
        /// </summary>
        internal static string LogUndoError {
            get {
                return ResourceManager.GetString("LogUndoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to null.
        /// </summary>
        internal static string Null {
            get {
                return ResourceManager.GetString("Null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: value can not be empty..
        /// </summary>
        internal static string PropertyValueCanNotBeEmpty {
            get {
                return ResourceManager.GetString("PropertyValueCanNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: value can not be null..
        /// </summary>
        internal static string PropertyValueCanNotBeNull {
            get {
                return ResourceManager.GetString("PropertyValueCanNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property value &apos;{value}&apos; does not match regex pattern &apos;{Pattern}&apos;..
        /// </summary>
        internal static string PropertyValueDoesNotMatchRegexPattern {
            get {
                return ResourceManager.GetString("PropertyValueDoesNotMatchRegexPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: length of the value must be in [{1} ... {2}] range..
        /// </summary>
        internal static string PropertyValueLengthMustBeInXYRange {
            get {
                return ResourceManager.GetString("PropertyValueLengthMustBeInXYRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: value must be in [{1} ... {2}] range..
        /// </summary>
        internal static string PropertyValueMustBeInXYRange {
            get {
                return ResourceManager.GetString("PropertyValueMustBeInXYRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        internal static string X {
            get {
                return ResourceManager.GetString("X", resourceCulture);
            }
        }
    }
}
