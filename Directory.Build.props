<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="$(MSBuildThisFileDirectory)Version.props" />

  <!-- Compute intermediate values. To avoid conflicts name all custom variables with Do prefix. -->
  <PropertyGroup>
    <DoBuildYear>$([System.DateTime]::Today.Year)</DoBuildYear>
    <DoProductName>DataObjects.Net</DoProductName>
    <DoProductAuthors>Xtensive LLC and contributors</DoProductAuthors>
    <DoProductCopyright>2003-$(DoBuildYear) $(DoProductAuthors)</DoProductCopyright>

    <DoMajor>$([System.Version]::new($(DoVersion)).Major)</DoMajor>
    <DoMinor>$([System.Version]::new($(DoVersion)).Minor)</DoMinor>
    <DoBuild>$([System.Version]::new($(DoVersion)).Build)</DoBuild>
    <DoRevision>$([System.Version]::new($(DoVersion)).Revision)</DoRevision>

    <DoFileRevision>$(BUILD_NUMBER)</DoFileRevision>
    <DoFileRevision Condition="'$(DoFileRevision)' == '' AND '$(DoRevision)' != '-1'">$(DoRevision)</DoFileRevision>
    <DoFileRevision Condition="'$(DoFileRevision)' == ''">0</DoFileRevision>

    <DoVersionSuffix Condition="'$(DoVersionSuffix)' == 'dev'">dev-$(DoFileRevision)</DoVersionSuffix>

    <DoVersionName>$(DoMajor).$(DoMinor).$(DoBuild)</DoVersionName>
    <DoVersionName Condition="'$(DoRevision)' != '-1'">$(DoVersionName).$(DoRevision)</DoVersionName>
    <DoVersionName Condition="'$(DoVersionSuffix)' != ''">$(DoVersionName)-$(DoVersionSuffix)</DoVersionName>

    <DoPackageIcon>$(MSBuildThisFileDirectory)do-nuget.png</DoPackageIcon>

    <DoGeneratePackage>true</DoGeneratePackage>
    <DoGeneratePackage Condition="$(MSBuildProjectName) == 'Xtensive.Orm.Weaver'">false</DoGeneratePackage>
    <DoGeneratePackage Condition="$(MSBuildProjectName) == 'Xtensive.Orm.Manual'">false</DoGeneratePackage>
    <DoGeneratePackage Condition="$(MSBuildProjectName) == 'TestCommon'">false</DoGeneratePackage>
    <DoGeneratePackage Condition="$(MSBuildProjectName.Contains('Tests')) == 'true'">false</DoGeneratePackage>

    <!-- BuildingInsideVisualStudio is also true in Rider -->
    <DoIsIdeBuild>false</DoIsIdeBuild>
    <DoIsIdeBuild Condition="$(BuildingInsideVisualStudio) == 'true'">true</DoIsIdeBuild>

    <!-- Disable "BinaryFormatter is obsolete" warnings for test projects -->
    <NoWarn Condition="$(MSBuildProjectName.Contains('Tests')) == 'true'">$(NoWarn);SYSLIB0011</NoWarn>
    <!-- Enable Usage of BinaryFormatter in test projects -->
    <EnableUnsafeBinaryFormatterSerialization
      Condition="'$(TargetFramework)'=='net8.0' AND $(MSBuildProjectName.Contains('Tests')) == 'true'">true</EnableUnsafeBinaryFormatterSerialization>
  </PropertyGroup>

  <!-- Debug-NET8, Release-NET8 are mostly for development convenience -->
  <PropertyGroup Condition = "$(Configuration.Contains('NET8')) == 'true'">
    <!-- hard binding to net8, no property and env variable allowed-->
    <TargetFrameworks>net8.0</TargetFrameworks>
  </PropertyGroup>
  
  <!-- Debug-NET7, Release-NET7 are mostly for development convenience -->
  <PropertyGroup Condition = "$(Configuration.Contains('NET7')) == 'true'">
    <!-- hard binding to net7, no property and env variable allowed-->
    <TargetFrameworks>net7.0</TargetFrameworks>
  </PropertyGroup>

  <!-- Debug-NET6, Release-NET6 are mostly for development convenience -->
  <PropertyGroup Condition = "$(Configuration.Contains('NET6')) == 'true'">
    <!-- hard binding to net6, no property and env variable allowed -->
    <TargetFrameworks>net6.0</TargetFrameworks>
  </PropertyGroup>

  <!--Release and Debug are for final builds, builds on build server, etc. Target frameworks are configurable here -->
  <PropertyGroup Label="Defaults"
      Condition="$(Configuration.Contains('NET8')) == 'false' AND $(Configuration.Contains('NET7')) == 'false' AND $(Configuration.Contains('NET6')) == 'false'">
    <Configuration Condition="$(Configuration) == ''">Debug</Configuration>
    <TargetFrameworks>$(TargetFrameworks)</TargetFrameworks>  <!-- the property -->
    <TargetFrameworks Condition="'$(TargetFrameworks)'==''">$(DO_TargetFrameworks)</TargetFrameworks> <!-- env var -->
    <TargetFrameworks Condition="'$(TargetFrameworks)'==''">net8.0;net7.0;net6.0</TargetFrameworks> <!-- fallback to default -->
  </PropertyGroup>

  <PropertyGroup Condition = "$(Configuration.Contains('Debug')) == 'true'">
   <DefineConstants>$(DefineConstants);TRACE;DEBUG</DefineConstants>
   <DebugSymbols>true</DebugSymbols>
   <DebugType>portable</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition = "$(Configuration.Contains('Release')) == 'true'">
   <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <NoLogo>true</NoLogo>
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <LangVersion>10.0</LangVersion> <!-- version assigned to net6.0 -->
    <SolutionDir Condition="$(SolutionDir) == ''">$([MSBuild]::EnsureTrailingSlash(
      $([MSBuild]::GetDirectoryNameOfFileAbove('$(MSBuildThisFileDirectory)', 'Orm.sln'))))</SolutionDir>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <ArtifactsDir Condition="'$(ArtifactsDir)'==''">$(SolutionDir)_Build\</ArtifactsDir>
    <BaseIntermediateOutputPath>$(ArtifactsDir)obj\$(MSBuildProjectName)\</BaseIntermediateOutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
    <BaseOutputPath>$(ArtifactsDir)bin\$(Configuration)\</BaseOutputPath>
    <BaseOutputPath Condition="$(MSBuildProjectName.Contains('Tests'))
      OR $(MSBuildProjectName) == 'TestCommon'
      OR $(MSBuildProjectName) == 'Xtensive.Orm.Manual'">$(ArtifactsDir)tests\$(Configuration)\</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)lib\</OutputPath>
    <MSBuildProjectExtensionsPath>$(IntermediateOutputPath)</MSBuildProjectExtensionsPath>
    <ProjectAssetsFile>$(MSBuildProjectExtensionsPath)project.assets.json</ProjectAssetsFile>
    <ProjectAssetsCacheFile>$(MSBuildProjectExtensionsPath)$(TargetFramework)\$(MSBuildProjectName).assets.cache</ProjectAssetsCacheFile>
    <OrmKeyFile>$(SolutionDir)Orm\Orm.snk</OrmKeyFile>
	<NoWarn>$(NoWarn);NETSDK1138</NoWarn>
  </PropertyGroup>

  <!-- Populate standard properties. -->
  <PropertyGroup>
    <Product>$(DoProductName)</Product>
    <Company>$(DoProductAuthors)</Company>
    <Authors>$(DoProductAuthors)</Authors>
    <Version>$(DoVersionName)</Version>
    <AssemblyVersion>$(DoMajor).$(DoMinor).0.0</AssemblyVersion>
    <FileVersion>$(DoMajor).$(DoMinor).$(DoBuild).$(DoFileRevision)</FileVersion>
    <Copyright>$(DoProductCopyright)</Copyright>
    <PackageProjectUrl>https://dataobjects.net/</PackageProjectUrl>
    <PackageIcon>do-nuget.png</PackageIcon>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>DataObjects.Net ORM BLL Persistence</PackageTags>
    <PackageOutputPath>$(BaseOutputPath)packages\</PackageOutputPath>
    <RepositoryUrl>https://github.com/DataObjects-NET/dataobjects-net</RepositoryUrl>
    <RepositoryType>git</RepositoryType>

    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <GeneratePackageOnBuild Condition="$(DoGeneratePackage) == 'true' AND '$(Configuration)' == 'Release'">true</GeneratePackageOnBuild>
    <IncludeSymbols Condition="$(GeneratePackageOnBuild) == 'true'">true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <SourceRoot Include="$(SolutionDir)"/>
    <PackageReference Condition="$(DoGeneratePackage) == 'true'"
                      Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All"/>
    <None Include="$(DoPackageIcon)" Visible="false" >
      <PackagePath>.</PackagePath>
      <Pack>true</Pack>
    </None>
  </ItemGroup>

  <Import Condition="Exists('User.Directory.Build.props')" Project="User.Directory.Build.props" />
</Project>
