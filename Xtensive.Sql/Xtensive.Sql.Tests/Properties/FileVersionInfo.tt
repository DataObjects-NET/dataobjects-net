<#@ template language="C#" hostspecific="True" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Text.RegularExpressions" #>
// Copyright (C) 2007-2009 Xtensive LLC.
// All rights reserved.
// For conditions of distribution and use, see license.
// Created by: Alex Yakunin
// Created:    2009.06.14

using System.Reflection;

<#
  var p = new Process();
  p.StartInfo.UseShellExecute = false;
  p.StartInfo.RedirectStandardOutput = true;
  p.StartInfo.CreateNoWindow = true;

  string path = Host.TemplateFile;
  path = Path.Combine(Path.GetPathRoot(path), Path.GetDirectoryName(path));
  path = Path.Combine(path, @"..");
  path = Path.GetFullPath(path);
  string revisionNumberRegex = null;

  if (Directory.Exists(Path.Combine(path, @"\.svn")) ||
      Directory.Exists(Path.Combine(path, @"\_svn"))) {
    p.StartInfo.FileName = Environment.GetEnvironmentVariable("SubWCRevPath") ?? "SubWCRev.exe";
    p.StartInfo.Arguments = "\"" + path + "\"";
    revisionNumberRegex = @"Last committed at revision (\d+)()";
  }
  else {
    p.StartInfo.FileName = "hg.exe";
    p.StartInfo.Arguments = "log -l 1 \"" + path + "\"";
    revisionNumberRegex = @"changeset\: +(\d+)\:([a-fA-F\d]+)";
  }
  string revision1 = "0";
  string revision2 = "0";
  try {
    p.Start();
    var match = Regex.Match(p.StandardOutput.ReadToEnd(),
      revisionNumberRegex, RegexOptions.Multiline);
    revision1 = match.Groups[1].Value;
    revision2 = match.Groups[2].Value;
    if (revision2==null || revision2.Length==0)
      revision2 = "0";
    else
      revision2 = Convert.ToInt32(revision2.Substring(0,4), 16).ToString();
    p.WaitForExit();
  }
  catch {
  }
#>

[assembly: AssemblyFileVersion("1.0.<#= revision1 #>.<#= revision2 #>")]
