<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExTablePropertyIsNotSet" xml:space="preserve">
    <value>Table is not set.</value>
  </data>
  <data name="ExInvalidExpressionType" xml:space="preserve">
    <value>Invalid expression type.</value>
  </data>
  <data name="ExUnboundColumn" xml:space="preserve">
    <value>Unbound column '{0}'.</value>
  </data>
  <data name="ExSizeShouldBeNotNegativeValue" xml:space="preserve">
    <value>Size should be not negative value.</value>
  </data>
  <data name="ExScaleShouldBeNonNegativeValue" xml:space="preserve">
    <value>Scale should be non-negative value.</value>
  </data>
  <data name="ExPrecisionShouldBeNonNegativeValue" xml:space="preserve">
    <value>Precision should be non-negative value.</value>
  </data>
  <data name="ExTheScaleMustBeLessThanOrEqualToPrecision" xml:space="preserve">
    <value>The scale must be less than or equal to precision.</value>
  </data>
  <data name="ExLengthShouldBeNotNegativeValue" xml:space="preserve">
    <value>Length should be not negative value.</value>
  </data>
  <data name="ExPositionValueShouldBeGreaterThanZero" xml:space="preserve">
    <value>Position value should be greater than zero.</value>
  </data>
  <data name="ExInvalidUsageOfTheRowCountArgument" xml:space="preserve">
    <value>Invalid usage of the "rowCount" argument.</value>
  </data>
  <data name="ExInvalidUsageOfTheOrientationArgument" xml:space="preserve">
    <value>Invalid usage of the "orientation" argument.</value>
  </data>
  <data name="ExReferencedColumnsCountCantBeLessThenOne" xml:space="preserve">
    <value>Referenced columns count cannot be less then one.</value>
  </data>
  <data name="ExReferencingColumnsCountCantBeLessThenOne" xml:space="preserve">
    <value>Referencing columns count cannot be less then one.</value>
  </data>
  <data name="ExRowAmountShouldBePositiveNumber" xml:space="preserve">
    <value>Row amount should be positive number.</value>
  </data>
  <data name="ExCircularReferenceDetected" xml:space="preserve">
    <value>Circular reference is detected.</value>
  </data>
  <data name="ExInstanceIsLocked" xml:space="preserve">
    <value>Instance is locked.</value>
  </data>
  <data name="ExTheDataTypeMustBeExactNumericWithScale0" xml:space="preserve">
    <value>The data type must be exact numeric with scale 0.</value>
  </data>
  <data name="ExDriverIsNotProperlyInitialized" xml:space="preserve">
    <value>Driver is not properly initialized.</value>
  </data>
  <data name="ExLiteralTypeXIsNotSupported" xml:space="preserve">
    <value>Literal type '{0}' is not supported.</value>
  </data>
  <data name="LogUnableToGetDefaultNodeComparerForTypeXxx" xml:space="preserve">
    <value>Unable to get default SQL comparer for type {0}.</value>
  </data>
  <data name="ExMultipleRenameHintsFoundForTypeXxx" xml:space="preserve">
    <value>Multiple rename hints found for type '{0}' with name '{1}'.</value>
  </data>
  <data name="ExColumnTypeIsNotSupportedByComparer" xml:space="preserve">
    <value>'{0}' column type is not supported by '{1}' comparer.</value>
  </data>
  <data name="ExConstraintIsNotSupportedByComparer" xml:space="preserve">
    <value>Constraint type '{0}' is not supported by '{1}' comparer.</value>
  </data>
  <data name="ExComparisonRootNotLocked" xml:space="preserve">
    <value>Comparison root is not locked.</value>
  </data>
  <data name="ExComparisonContextMissing" xml:space="preserve">
    <value>Comparison context missing.</value>
  </data>
  <data name="ExComparisonResultAlreadyRegistered" xml:space="preserve">
    <value>Another comparison result already registered in comparison registry.</value>
  </data>
  <data name="ExCrossApplyAndLeftOuterApplyAreNotSupportedByDefault" xml:space="preserve">
    <value>SqlJoinType.CrossApply &amp; SqlJoinType.LeftOuterApply are not supported by default SqlTranslator</value>
  </data>
  <data name="ExJoinExpressionShouldBeNullForCrossApplyAndLeftOuterApply" xml:space="preserve">
    <value>Join expression should be null for SqlJoinType.CrossApply &amp; SqlJoinType.LeftOuterApply.</value>
  </data>
  <data name="ExNodeTypeIsUnknown" xml:space="preserve">
    <value>Node type is unknown.</value>
  </data>
  <data name="ExSqlContainerExpressionCanNotBeCompiled" xml:space="preserve">
    <value>Sql container expression can not be compiled.</value>
  </data>
  <data name="ExSpecifiedConnectionDoesNotBelongToThisDriver" xml:space="preserve">
    <value>Specified connection does not belong to this driver.</value>
  </data>
  <data name="ExTypeXIsNotSupported" xml:space="preserve">
    <value>Type '{0}' is not supported.</value>
  </data>
  <data name="ExTranslationOfLiteralOfTypeXIsNotSupported" xml:space="preserve">
    <value>Translation of literal of type '{0}' is not supported.</value>
  </data>
  <data name="ExFunctionXIsNotSupported" xml:space="preserve">
    <value>Function '{0}' is not supported.</value>
  </data>
  <data name="ExPartOfUrlContainsForbiddenCharacters" xml:space="preserve">
    <value>Part of URL contains forbidden characters. Forbidden characters: </value>
  </data>
  <data name="ExOperationXIsNotSupported" xml:space="preserve">
    <value>Operation '{0}' is not supported</value>
  </data>
  <data name="ExSpecifiedPrecisionXIsGreaterThanMaximumSupportedByUnderlyingStorageY" xml:space="preserve">
    <value>Specified precision ({0}) is greater than maximum supported by underlying storage ({1}).</value>
  </data>
  <data name="ExTableAlreadyHasSpecifiedName" xml:space="preserve">
    <value>Table already has specified name.</value>
  </data>
  <data name="ExColumnAlreadyHasSpecifiedName" xml:space="preserve">
    <value>Column already has specified name.</value>
  </data>
  <data name="ExLargeObjectsAreNotSupportedByThisServer" xml:space="preserve">
    <value>Large objects are not supported by this server.</value>
  </data>
  <data name="ExIsolationLevelXIsNotSupported" xml:space="preserve">
    <value>Isolation level '{0}' is not supported</value>
  </data>
  <data name="ExLockXIsNotSupported" xml:space="preserve">
    <value>Lock '{0}' is not supported</value>
  </data>
  <data name="ExOnlySqlLiteralOrSqlPlaceholderCanBeUsedInLimitOffset" xml:space="preserve">
    <value>Only SqlLiteral or SqlPlaceholder can be used in Limit/Offset</value>
  </data>
  <data name="ExNameForParameterXIsNotFound" xml:space="preserve">
    <value>Name for parameter '{0}' is not found'</value>
  </data>
  <data name="ExValueForPlaceholderXIsNotSet" xml:space="preserve">
    <value>Value for placeholder '{0}' is not set.</value>
  </data>
  <data name="ExItemsForCycleXAreNotSpecified" xml:space="preserve">
    <value>Items for cycle '{0}' are not specified.</value>
  </data>
  <data name="ExCursorParametersAreNotSupportedByThisServer" xml:space="preserve">
    <value>Cursor parameters are not supported by this server.</value>
  </data>
  <data name="ExSavepointsAreNotSupportedByCurrentStorage" xml:space="preserve">
    <value>Savepoints are not supported by current storage</value>
  </data>
  <data name="ExTransactionShouldBeActive" xml:space="preserve">
    <value>Transaction should be active</value>
  </data>
  <data name="ExTransactionShouldNotBeActive" xml:space="preserve">
    <value>Transaction should not be active</value>
  </data>
  <data name="ExTypesOfValuesAreDifferent" xml:space="preserve">
    <value>Types of values are different</value>
  </data>
  <data name="ExCurrentStorageDoesNotSupporXValuesLessThanYSuppliedValueIsZ" xml:space="preserve">
    <value>Current storage does not support '{0}' values less than '{1}'. Supplied value is '{2}'.</value>
  </data>
  <data name="ExCurrentStorageDoesNotSupportXValuesGreatherThanYSuppliedValueIsZ" xml:space="preserve">
    <value>Current storage does not support '{0}' values greather than '{1}'. Supplied value is '{2}'.</value>
  </data>
</root>